@using Glass.Mapper.Sc.Web.Mvc
@using Agency.Feature.Services.Models

@inherits Glass.Mapper.Sc.Web.Mvc.GlassView<PortfolioItem>

@if (IsInEditingMode)
{
    if (Html.Glass().Model == null)
    {
        <p>Portfolio Item - No datasource found, please associate a datasource.</p>
    }
    else
    {
        <div class="col-md-4 col-sm-6 portfolio-item">
            <a id="portfolio_@Model.Id.ToString().Replace("{", "").Replace("}", "").Replace("-", "")"
               class="portfolio-link" data-toggle="modal" href="#portfolio">
                <div class="portfolio-hover">
                    <div class="portfolio-hover-content">
                        <i class="fa fa-plus fa-3x"></i>
                    </div>
                </div>
            </a>
            @RenderImage(x => x.Image, isEditable: true, parameters: new { @class = "img-fluid" })
            <div class="portfolio-caption">
                <h4>@Editable(x => x.Client)</h4>
                <p class="text-muted">@Editable(x => x.Category)</p>
            </div>
        </div>
    }
}
else if (!IsInEditingMode && Html.Glass().Model != null)
{
    <div class="col-md-4 col-sm-6 portfolio-item">
        <a id="portfolio_@Model.Id.ToString().Replace("{", "").Replace("}", "").Replace("-", "")"
           class="portfolio-link" data-toggle="modal" href="#portfolio">
            <div class="portfolio-hover">
                <div class="portfolio-hover-content">
                    <i class="fa fa-plus fa-3x"></i>
                </div>
            </div>
            @RenderImage(x => x.Image, isEditable: false, parameters: new { @class = "img-fluid" })
        </a>
        <div class="portfolio-caption">
            <h4>@Model.Client</h4>
            <p class="text-muted">@Model.Category</p>
        </div>
    </div>
}

<script type="text/javascript">
        $("#portfolio_@Model.Id.ToString().Replace("{", "").Replace("}", "").Replace("-", "")").on('click', function () {
            portfolioModal({
                date: "Date: " + "@Model.Date.ToString("MMMM") " + " " + "@Model.Date.Year",
                client: "Client: " + "@Model.Client",
                category: "Category: " + "@Model.Category",                
                image: '@RenderImage(model => model.ImageFull, new { @class = "img-fluid d-block mx-auto" })',
                projecname: "@Model.ProjectName",
                projecttitle: "@Model.ProjecTitle",
                projecttext: "@Model.Text"
            });
        })
</script>

